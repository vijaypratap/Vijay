@{
    ViewData["Title"] = "QueryBot";
}
<style>
body {
    background: #f5f7fa;
    font-family: 'Segoe UI', Arial, sans-serif;
    margin: 0;
    padding: 0;
}
.chatbot-container {
    max-width: 500px;
    margin: 40px auto;
    background: #fff;
    border-radius: 16px;
    box-shadow: 0 4px 24px rgba(0,0,0,0.08);
    padding: 32px 24px 24px 24px;
    transition: background 0.3s;
}
.chatbot-title {
    text-align: center;
    font-size: 2rem;
    font-weight: 700;
    color: #2d3748;
    margin-bottom: 24px;
    letter-spacing: 1px;
}
.chat-window {
    background: #f1f3f6;
    border-radius: 10px;
    min-height: 260px;
    max-height: 320px;
    overflow-y: auto;
    padding: 16px;
    margin-bottom: 18px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.03);
    transition: background 0.3s;
}
.chat-message {
    margin-bottom: 14px;
    display: flex;
    align-items: flex-end;
    animation: fadeIn 0.4s;
}
.chat-message.user {
    flex-direction: row-reverse;
}
.chat-message .avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    margin: 0 8px;
    background: #e2e8f0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.3rem;
    font-weight: bold;
    color: #3182ce;
    box-shadow: 0 1px 4px rgba(0,0,0,0.04);
}
.chat-message.user .avatar {
    background: #3182ce;
    color: #fff;
}
.chat-message.user .bubble {
    background: #3182ce;
    color: #fff;
    margin-left: 0;
    margin-right: 8px;
    border-bottom-right-radius: 4px;
    border-bottom-left-radius: 18px;
}
.chat-message.bot .bubble {
    background: #e2e8f0;
    color: #2d3748;
    margin-right: 0;
    margin-left: 8px;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 18px;
}
.bubble {
    padding: 10px 18px;
    border-radius: 18px;
    max-width: 75%;
    font-size: 1rem;
    box-shadow: 0 1px 4px rgba(0,0,0,0.04);
    word-break: break-word;
    position: relative;
    animation: popIn 0.3s;
}
.chat-form {
    display: flex;
    gap: 10px;
}
.chat-input {
    flex: 1;
    padding: 10px 14px;
    border: 1px solid #cbd5e1;
    border-radius: 8px;
    font-size: 1rem;
    outline: none;
    transition: border 0.2s;
}
.chat-input:focus {
    border-color: #3182ce;
}
.chat-submit {
    background: #3182ce;
    color: #fff;
    border: none;
    border-radius: 8px;
    padding: 10px 20px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.2s;
}
.chat-submit:hover {
    background: #2563eb;
}
@@media (max-width: 600px) {
    .chatbot-container {
        max-width: 100vw;
        margin: 0;
        border-radius: 0;
        padding: 16px 4px 12px 4px;
    }
    .chat-window {
        min-height: 180px;
        max-height: 220px;
        padding: 8px;
    }
    .chat-form {
        flex-direction: column;
        gap: 6px;
    }
    .chat-input, .chat-submit {
        font-size: 0.95rem;
        padding: 8px 10px;
    }
}
@@media (max-width: 400px) {
    .chatbot-title {
        font-size: 1.2rem;
    }
}
@@media (prefers-color-scheme: dark) {
    body {
        background: #181a1b;
    }
    .chatbot-container {
        background: #23272f;
        box-shadow: 0 4px 24px rgba(0,0,0,0.25);
    }
    .chatbot-title {
        color: #e2e8f0;
    }
    .chat-window {
        background: #23272f;
    }
    .chat-message.bot .bubble {
        background: #23272f;
        color: #e2e8f0;
    }
    .chat-message.user .bubble {
        background: #2563eb;
    }
    .chat-input {
        background: #23272f;
        color: #e2e8f0;
        border: 1px solid #374151;
    }
    .chat-input:focus {
        border-color: #2563eb;
    }
    .chat-submit {
        background: #2563eb;
    }
}
@@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}
@@keyframes popIn {
    from { transform: scale(0.8); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}
</style>
<div class="chatbot-container">
    <div class="chatbot-title">QueryBot</div>
    <div class="chat-window" id="chatWindow">
        <!-- Chat messages will appear here -->
    </div>
    <form class="chat-form" id="queryForm" autocomplete="off">
        <input class="chat-input" type="text" name="naturalLanguageQuery" id="chatInput" placeholder="Ask me anything about your data..." autofocus />
        <button class="chat-submit" type="submit">Send</button>
    </form>
</div>
<script>
const chatWindow = document.getElementById('chatWindow');
const queryForm = document.getElementById('queryForm');
const chatInput = document.getElementById('chatInput');

function appendMessage(sender, text) {
    const msgDiv = document.createElement('div');
    msgDiv.className = 'chat-message ' + sender;
    // Avatar
    const avatar = document.createElement('div');
    avatar.className = 'avatar';
    avatar.innerHTML = sender === 'user' ? '<span>🧑</span>' : '<span>🤖</span>';
    // Bubble
    const bubble = document.createElement('div');
    bubble.className = 'bubble';
    bubble.textContent = text;
    if (sender === 'user') {
        msgDiv.appendChild(avatar);
        msgDiv.appendChild(bubble);
    } else {
        msgDiv.appendChild(avatar);
        msgDiv.appendChild(bubble);
    }
    chatWindow.appendChild(msgDiv);
    chatWindow.scrollTop = chatWindow.scrollHeight;
}

queryForm.addEventListener('submit', function(e) {
    e.preventDefault();
    const userMsg = chatInput.value.trim();
    if (!userMsg) return;
    appendMessage('user', userMsg);
    chatInput.value = '';
    appendMessage('bot', 'Thinking...');
    fetch('https://ideal-space-funicular-qv96qr4v5vcpjp-5187.app.github.dev/Query/ExecuteQuery', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ naturalLanguageQuery: userMsg })
    })
    .then(res => res.json())
    .then(data => {
        // Remove the 'Thinking...' message
        const lastBotMsg = chatWindow.querySelector('.chat-message.bot:last-child');
        if (lastBotMsg && lastBotMsg.querySelector('.bubble').textContent === 'Thinking...') {
            lastBotMsg.remove();
        }
        appendMessage('bot', data.response || 'No response.');
    })
    .catch(() => {
        const lastBotMsg = chatWindow.querySelector('.chat-message.bot:last-child');
        if (lastBotMsg && lastBotMsg.querySelector('.bubble').textContent === 'Thinking...') {
            lastBotMsg.remove();
        }
        appendMessage('bot', 'Sorry, something went wrong.');
    });
});
</script>
